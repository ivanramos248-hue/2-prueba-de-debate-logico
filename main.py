from flask import Flask, render_template, request
import google.generativeai as genai
import os

# Configuraci√≥n de la API de Gemini
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

app = Flask(__name__)

@app.route("/", methods=["GET", "POST"])
def index():
    debate = None
    error = None

    if request.method == "POST":
        tema = request.form.get("tema")

        try:
            # Modelo actualizado
            modelo = genai.GenerativeModel("gemini-1.5-flash-latest")

            # Prompt del debate c√≥smico
            prompt = f"""
            Eres el moderador de un debate c√≥smico entre tres entidades de sabidur√≠a universal:
            üåô **Athena** = la raz√≥n y la l√≥gica.
            üî• **Prometheus** = la innovaci√≥n y el cambio.
            üîÆ **Or√°culo** = la intuici√≥n y la visi√≥n espiritual.

            Tema del debate: "{tema}"

            Cada entidad debe dar su perspectiva √∫nica.
            Luego, concluye con una s√≠ntesis armoniosa llamada:
            ‚ú® "Conclusi√≥n del Cosmos" ‚ú® que integra los tres puntos de vista
            en una comprensi√≥n trascendente.

            El texto debe estar bien estructurado, con nombres claros antes de cada intervenci√≥n,
            y en formato narrativo atractivo.
            """

            respuesta = modelo.generate_content(prompt)
            debate = respuesta.text

        except Exception as e:
            error = f"Ocurri√≥ un error: {str(e)}"

    return render_template("index.html", debate=debate, error=error)


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)
